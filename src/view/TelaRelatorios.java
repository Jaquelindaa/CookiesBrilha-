package view;

import controller.VendaController;
import model.Venda;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols; // Importado para Locale
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Locale; // Importado para Locale
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaRelatorios extends javax.swing.JFrame {

    private final VendaController vendaController;
    // --- FORMATADORES COMO MEMBROS DA CLASSE ---
    private final DecimalFormat df; // Formatador de moeda
    private final DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm"); // Formatador de data/hora

    /**
     * Creates new form TelaRelatorios
     */
    public TelaRelatorios() {
        initComponents();
        this.vendaController = new VendaController();
        // --- INICIALIZA O FORMATADOR DE MOEDA NO CONSTRUTOR ---
        this.df = new DecimalFormat("R$ #,##0.00", new DecimalFormatSymbols(new Locale("pt", "BR")));

        // --- CHAMA A CONFIGURAÇÃO DA TABELA ---
        configurarTabelaRelatorio();
        setLocationRelativeTo(null);
    }

    // --- NOVO MÉTODO: Para configurar as colunas da tabela ---
    private void configurarTabelaRelatorio() {
        DefaultTableModel model = (DefaultTableModel) tblRelatorio.getModel();
        // Define os nomes das colunas
        model.setColumnIdentifiers(new Object[]{"ID", "Data/Hora", "Cliente (CPF)", "Tipo", "Valor/Pontos", "Pontos Gerados"});
        // Ajusta larguras se necessário (exemplo)
        if (tblRelatorio.getColumnModel().getColumnCount() > 0) {
            tblRelatorio.getColumnModel().getColumn(0).setPreferredWidth(40);  // ID
            tblRelatorio.getColumnModel().getColumn(1).setPreferredWidth(120); // Data/Hora
            tblRelatorio.getColumnModel().getColumn(2).setPreferredWidth(100); // CPF
            tblRelatorio.getColumnModel().getColumn(3).setPreferredWidth(60);  // Tipo
            tblRelatorio.getColumnModel().getColumn(4).setPreferredWidth(100); // Valor/Pontos
            tblRelatorio.getColumnModel().getColumn(5).setPreferredWidth(100); // Pontos Gerados
        }
    }

    // --- MÉTODO CORRIGIDO ---
    private void carregarRelatorio() {
        DefaultTableModel model = (DefaultTableModel) tblRelatorio.getModel();
        model.setRowCount(0);

        double totalVendasMonetario = 0.0;

        try {
            List<Venda> transacoes = vendaController.buscarTodasTransacoes();

            if (transacoes.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nenhuma transação encontrada no período.", "Relatório Vazio", JOptionPane.INFORMATION_MESSAGE);
                lblTotalVendas.setText("Total em Vendas: R$ 0,00");
                return;
            }

            for (Venda venda : transacoes) {
                String clienteCpf = (venda.getCliente() != null && venda.getCliente().getCpf() != null)
                        ? venda.getCliente().getCpf() : "N/A";

                String valorOuPontos;
                String pontosGeradosStr;

                if ("RESGATE".equals(venda.getTipoTransacao())) {
                    valorOuPontos = "(" + venda.getPontosGerados() + " pts)";
                    pontosGeradosStr = "0";
                } else {
                    valorOuPontos = df.format(venda.getValorTotal());
                    pontosGeradosStr = "+" + venda.getPontosGerados(); 
                    totalVendasMonetario += venda.getValorTotal();
                }

                model.addRow(new Object[]{
                    venda.getId(),
                    venda.getDataVenda() != null ? venda.getDataVenda().format(dtf) : "Data Inválida", // Verifica se data não é nula
                    clienteCpf,
                    venda.getTipoTransacao(),
                    valorOuPontos,
                    pontosGeradosStr
                });
            }

            lblTotalVendas.setText("Total em Vendas: " + df.format(totalVendasMonetario));

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar o relatório do banco de dados: " + e.getMessage(), "Erro de Banco", JOptionPane.ERROR_MESSAGE);
            lblTotalVendas.setText("Total em Vendas: Erro");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro inesperado ao processar os dados: " + e.getMessage(), "Erro Inesperado", JOptionPane.ERROR_MESSAGE);
            lblTotalVendas.setText("Total em Vendas: Erro");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        btnCarregarrelatorio = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRelatorio = new javax.swing.JTable();
        lblTotalVendas = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatórios");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/banner2.png"))); // NOI18N

        lblTitulo.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        lblTitulo.setText("Relatórios");

        btnCarregarrelatorio.setBackground(new java.awt.Color(255, 179, 192));
        btnCarregarrelatorio.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 16)); // NOI18N
        btnCarregarrelatorio.setText("Relatórios de Vendas e Resgate");
        btnCarregarrelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregarrelatorioActionPerformed(evt);
            }
        });

        tblRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRelatorio);

        lblTotalVendas.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 16)); // NOI18N
        lblTotalVendas.setText("Total em Vendas: R$ 0,00");

        btnVoltar.setBackground(new java.awt.Color(255, 102, 153));
        btnVoltar.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 16)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCarregarrelatorio)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 964, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lblTotalVendas)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVoltar))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1054, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblTitulo)
                .addGap(18, 18, 18)
                .addComponent(btnCarregarrelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 26, Short.MAX_VALUE)
                        .addComponent(lblTotalVendas)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCarregarrelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregarrelatorioActionPerformed
        carregarRelatorio();
    }//GEN-LAST:event_btnCarregarrelatorioActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRelatorios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarregarrelatorio;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTotalVendas;
    private javax.swing.JTable tblRelatorio;
    // End of variables declaration//GEN-END:variables
}
